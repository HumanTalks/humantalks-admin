# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET     /                                                           com.humantalks.exposed.Application.index

GET     /submit-talk                                                com.humantalks.exposed.talks.TalkCtrl.create
POST    /submit-talk                                                com.humantalks.exposed.talks.TalkCtrl.doCreate
GET     /submit-talk/$id<.{36}>/edit                                com.humantalks.exposed.talks.TalkCtrl.update(id: Talk.Id)
POST    /submit-talk/$id<.{36}>/edit                                com.humantalks.exposed.talks.TalkCtrl.doUpdate(id: Talk.Id)

GET     /register                                                   com.humantalks.auth.AuthCtrl.register
POST    /register                                                   com.humantalks.auth.AuthCtrl.doRegister
GET     /login                                                      com.humantalks.auth.AuthCtrl.login
POST    /login                                                      com.humantalks.auth.AuthCtrl.doLogin
POST    /logout                                                     com.humantalks.auth.AuthCtrl.doLogout
POST    /send-activation-email                                      com.humantalks.auth.AuthCtrl.sendActivationEmail(email: String)
GET     /activate-account/:id                                       com.humantalks.auth.AuthCtrl.activateAccount(id: AuthToken.Id)
GET     /forgot-password                                            com.humantalks.auth.AuthCtrl.forgotPassword
POST    /forgot-password                                            com.humantalks.auth.AuthCtrl.doForgotPassword
GET     /reset-password/:id                                         com.humantalks.auth.AuthCtrl.resetPassword(id: AuthToken.Id)
POST    /reset-password/:id                                         com.humantalks.auth.AuthCtrl.doResetPassword(id: AuthToken.Id)
#GET     /auth/debug                                                 com.humantalks.auth.AuthCtrl.debug
#GET     /auth/debug/remove-user/:id                                 com.humantalks.auth.AuthCtrl.debugRemoveUser(id: Person.Id)
#GET     /auth/debug/remove-token/:id                                com.humantalks.auth.AuthCtrl.debugRemoveToken(id: AuthToken.Id)

GET     /home                                                       com.humantalks.internal.Application.index

GET     /partners                                                   com.humantalks.internal.partners.PartnerCtrl.find
GET     /partners/create                                            com.humantalks.internal.partners.PartnerCtrl.create
POST    /partners/create                                            com.humantalks.internal.partners.PartnerCtrl.doCreate
GET     /partners/$id<.{36}>                                        com.humantalks.internal.partners.PartnerCtrl.get(id: Partner.Id)
GET     /partners/$id<.{36}>/edit                                   com.humantalks.internal.partners.PartnerCtrl.update(id: Partner.Id)
POST    /partners/$id<.{36}>/edit                                   com.humantalks.internal.partners.PartnerCtrl.doUpdate(id: Partner.Id)
POST    /partners/$id<.{36}>/delete                                 com.humantalks.internal.partners.PartnerCtrl.doDelete(id: Partner.Id)
GET     /partners/$id<.{36}>/venue/edit                             com.humantalks.internal.partners.PartnerCtrl.updateVenue(id: Partner.Id)
POST    /partners/$id<.{36}>/venue/edit                             com.humantalks.internal.partners.PartnerCtrl.doUpdateVenue(id: Partner.Id)
GET     /partners/$id<.{36}>/sponsor/create                         com.humantalks.internal.partners.PartnerCtrl.createSponsor(id: Partner.Id)
POST    /partners/$id<.{36}>/sponsor/create                         com.humantalks.internal.partners.PartnerCtrl.doCreateSponsor(id: Partner.Id)
POST    /partners/$id<.{36}>/sponsor/:index/delete                  com.humantalks.internal.partners.PartnerCtrl.doDeleteSponsor(id: Partner.Id, index: Int)

GET     /persons                                                    com.humantalks.internal.persons.PersonCtrl.find
GET     /persons/create                                             com.humantalks.internal.persons.PersonCtrl.create
POST    /persons/create                                             com.humantalks.internal.persons.PersonCtrl.doCreate
GET     /persons/$id<.{36}>                                         com.humantalks.internal.persons.PersonCtrl.get(id: Person.Id)
GET     /persons/$id<.{36}>/edit                                    com.humantalks.internal.persons.PersonCtrl.update(id: Person.Id)
POST    /persons/$id<.{36}>/edit                                    com.humantalks.internal.persons.PersonCtrl.doUpdate(id: Person.Id)
POST    /persons/$id<.{36}>/delete                                  com.humantalks.internal.persons.PersonCtrl.doDelete(id: Person.Id)
GET     /persons/me                                                 com.humantalks.internal.persons.PersonCtrl.profil

GET     /talks                                                      com.humantalks.internal.talks.TalkCtrl.find
GET     /talks/create                                               com.humantalks.internal.talks.TalkCtrl.create
POST    /talks/create                                               com.humantalks.internal.talks.TalkCtrl.doCreate
GET     /talks/$id<.{36}>                                           com.humantalks.internal.talks.TalkCtrl.get(id: Talk.Id)
GET     /talks/$id<.{36}>/edit                                      com.humantalks.internal.talks.TalkCtrl.update(id: Talk.Id)
POST    /talks/$id<.{36}>/edit                                      com.humantalks.internal.talks.TalkCtrl.doUpdate(id: Talk.Id)
POST    /talks/$id<.{36}>/status/:status                            com.humantalks.internal.talks.TalkCtrl.setStatus(id: Talk.Id, status: Talk.Status.Value)
POST    /talks/$id<.{36}>/attribute                                 com.humantalks.internal.talks.TalkCtrl.setAttribute(id: Talk.Id)
POST    /talks/$id<.{36}>/delete                                    com.humantalks.internal.talks.TalkCtrl.doDelete(id: Talk.Id)

GET     /events                                                     com.humantalks.internal.events.EventCtrl.find
GET     /events/create                                              com.humantalks.internal.events.EventCtrl.create
POST    /events/create                                              com.humantalks.internal.events.EventCtrl.doCreate
GET     /events/$id<.{36}>                                          com.humantalks.internal.events.EventCtrl.get(id: Event.Id)
GET     /events/$id<.{36}>/edit                                     com.humantalks.internal.events.EventCtrl.update(id: Event.Id)
POST    /events/$id<.{36}>/edit                                     com.humantalks.internal.events.EventCtrl.doUpdate(id: Event.Id)
POST    /events/$id<.{36}>/publish                                  com.humantalks.internal.events.EventCtrl.doPublish(id: Event.Id)
POST    /events/$id<.{36}>/updatePublish                            com.humantalks.internal.events.EventCtrl.doUpdatePublish(id: Event.Id)
POST    /events/$id<.{36}>/unpublish                                com.humantalks.internal.events.EventCtrl.doUnpublish(id: Event.Id)
POST    /events/$id<.{36}>/delete                                   com.humantalks.internal.events.EventCtrl.doDelete(id: Event.Id)
POST    /events/$id<.{36}>/venue                                    com.humantalks.internal.events.EventCtrl.doCreateVenue(id: Event.Id)
POST    /events/$id<.{36}>/venue/add                                com.humantalks.internal.events.EventCtrl.doAddVenueForm(id: Event.Id)
POST    /events/$id<.{36}>/talks                                    com.humantalks.internal.events.EventCtrl.doCreateTalk(id: Event.Id)
POST    /events/$id<.{36}>/talks/add                                com.humantalks.internal.events.EventCtrl.doAddTalkForm(id: Event.Id)
POST    /events/$id<.{36}>/talks/$talkId<.{36}>/add                 com.humantalks.internal.events.EventCtrl.doAddTalk(id: Event.Id, talkId: Talk.Id)
POST    /events/$id<.{36}>/talks/$talkId<.{36}>/move                com.humantalks.internal.events.EventCtrl.doMoveTalk(id: Event.Id, talkId: Talk.Id, up: Boolean)
POST    /events/$id<.{36}>/talks/$talkId<.{36}>/delete              com.humantalks.internal.events.EventCtrl.doRemoveTalk(id: Event.Id, talkId: Talk.Id)

GET     /admin/users                                                com.humantalks.internal.admin.AdminCtrl.users
POST    /admin/users/$id<.{36}>/role                                com.humantalks.internal.admin.AdminCtrl.setRole(id: Person.Id)
POST    /admin/users/deleteToken/:id                                com.humantalks.internal.admin.AdminCtrl.deleteToken(id: AuthToken.Id)

GET     /admin/config                                               com.humantalks.internal.admin.config.ConfigCtrl.find
GET     /admin/config/create                                        com.humantalks.internal.admin.config.ConfigCtrl.create
POST    /admin/config/create                                        com.humantalks.internal.admin.config.ConfigCtrl.doCreate
GET     /admin/config/$id<.{36}>                                    com.humantalks.internal.admin.config.ConfigCtrl.get(id: Config.Id)
GET     /admin/config/$id<.{36}>/edit                               com.humantalks.internal.admin.config.ConfigCtrl.update(id: Config.Id)
POST    /admin/config/$id<.{36}>/edit                               com.humantalks.internal.admin.config.ConfigCtrl.doUpdate(id: Config.Id)
POST    /admin/config/$id<.{36}>/value                              com.humantalks.internal.admin.config.ConfigCtrl.doUpdateValue(id: Config.Id)
POST    /admin/config/$id<.{36}>/delete                             com.humantalks.internal.admin.config.ConfigCtrl.doDelete(id: Config.Id)

GET     /api                                                        com.humantalks.exposed.PublicApi.apiRoot
GET     /api/meetups                                                com.humantalks.exposed.PublicApi.findEvents(include: Option[String] ?= None)
GET     /api/meetups/$id<.{36}>                                     com.humantalks.exposed.PublicApi.findEvent(id: Event.Id, include: Option[String] ?= None)
GET     /api/talks                                                  com.humantalks.exposed.PublicApi.findTalks(include: Option[String] ?= None)
GET     /api/talks/$id<.{36}>                                       com.humantalks.exposed.PublicApi.findTalk(id: Talk.Id, include: Option[String] ?= None)
GET     /api/speakers                                               com.humantalks.exposed.PublicApi.findSpeakers(include: Option[String] ?= None)
GET     /api/speakers/$id<.{36}>                                    com.humantalks.exposed.PublicApi.findSpeaker(id: Person.Id, include: Option[String] ?= None)
GET     /api/venues                                                 com.humantalks.exposed.PublicApi.findPartners(include: Option[String] ?= None)
GET     /api/venues/$id<.{36}>                                      com.humantalks.exposed.PublicApi.findPartner(id: Partner.Id, include: Option[String] ?= None)
POST    /api/persons                                                com.humantalks.exposed.PublicApi.createPerson

GET     /api/select2/partners                                       com.humantalks.common.controllers.Select2Ctrl.partners
GET     /api/select2/persons                                        com.humantalks.common.controllers.Select2Ctrl.persons
GET     /api/select2/talks                                          com.humantalks.common.controllers.Select2Ctrl.talks(pending: Boolean ?= false)
GET     /api/select2/events                                         com.humantalks.common.controllers.Select2Ctrl.events

GET     /api/internal                                               com.humantalks.internal.Application.apiRoot

GET     /api/internal/partners                                      com.humantalks.internal.partners.PartnerApiCtrl.find
POST    /api/internal/partners                                      com.humantalks.internal.partners.PartnerApiCtrl.create
GET     /api/internal/partners/$id<.{36}>                           com.humantalks.internal.partners.PartnerApiCtrl.get(id: Partner.Id)
PUT     /api/internal/partners/$id<.{36}>                           com.humantalks.internal.partners.PartnerApiCtrl.update(id: Partner.Id)
DELETE  /api/internal/partners/$id<.{36}>                           com.humantalks.internal.partners.PartnerApiCtrl.delete(id: Partner.Id)
POST    /api/internal/partners/duplicates                           com.humantalks.internal.partners.PartnerApiCtrl.duplicates(id: Option[String] ?= None)

GET     /api/internal/persons                                       com.humantalks.internal.persons.PersonApiCtrl.find
POST    /api/internal/persons                                       com.humantalks.internal.persons.PersonApiCtrl.create
GET     /api/internal/persons/$id<.{36}>                            com.humantalks.internal.persons.PersonApiCtrl.get(id: Person.Id)
PUT     /api/internal/persons/$id<.{36}>                            com.humantalks.internal.persons.PersonApiCtrl.update(id: Person.Id)
DELETE  /api/internal/persons/$id<.{36}>                            com.humantalks.internal.persons.PersonApiCtrl.delete(id: Person.Id)
POST    /api/internal/persons/duplicates                            com.humantalks.internal.persons.PersonApiCtrl.duplicates(id: Option[String] ?= None)

GET     /api/internal/talks                                         com.humantalks.internal.talks.TalkApiCtrl.find
POST    /api/internal/talks                                         com.humantalks.internal.talks.TalkApiCtrl.create
GET     /api/internal/talks/$id<.{36}>                              com.humantalks.internal.talks.TalkApiCtrl.get(id: Talk.Id)
PUT     /api/internal/talks/$id<.{36}>                              com.humantalks.internal.talks.TalkApiCtrl.update(id: Talk.Id)
DELETE  /api/internal/talks/$id<.{36}>                              com.humantalks.internal.talks.TalkApiCtrl.delete(id: Talk.Id)
POST    /api/internal/talks/duplicates                              com.humantalks.internal.talks.TalkApiCtrl.duplicates(id: Option[String] ?= None)

GET     /api/internal/events                                        com.humantalks.internal.events.EventApiCtrl.find
POST    /api/internal/events                                        com.humantalks.internal.events.EventApiCtrl.create
GET     /api/internal/events/$id<.{36}>                             com.humantalks.internal.events.EventApiCtrl.get(id: Event.Id)
PUT     /api/internal/events/$id<.{36}>                             com.humantalks.internal.events.EventApiCtrl.update(id: Event.Id)
DELETE  /api/internal/events/$id<.{36}>                             com.humantalks.internal.events.EventApiCtrl.delete(id: Event.Id)
POST    /api/internal/events/duplicates                             com.humantalks.internal.events.EventApiCtrl.duplicates(id: Option[String] ?= None)

POST    /api/internal/admin/config/preview                          com.humantalks.internal.admin.config.ConfigApiCtrl.preview

GET     /api/tools                                                  com.humantalks.tools.Application.apiRoot
GET     /api/tools/embed                                            com.humantalks.tools.EmbedCtrl.embed(url: String)
GET     /api/tools/scrapers/twitter/profil                          com.humantalks.tools.scrapers.TwitterScraper.profil(account: String)
GET     /api/tools/scrapers/email/profil                            com.humantalks.tools.scrapers.EmailScraper.profil(email: String)

GET     /status                                                     global.controllers.Application.status

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                                               controllers.Assets.versioned(path="/public", file: Asset)
